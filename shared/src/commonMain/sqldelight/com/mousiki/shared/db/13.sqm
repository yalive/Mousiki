-- #############  Drop unused tables  ################ --
DROP TABLE IF EXISTS playlists_search_result;
DROP TABLE IF EXISTS channel_search_result;
DROP TABLE IF EXISTS channel_playlist;
DROP TABLE IF EXISTS artists;

CREATE TABLE IF NOT EXISTS db_playlist (
  id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL UNIQUE,
  type TEXT NOT NULL DEFAULT 'CUSTOM',
  description TEXT NOT NULL DEFAULT '',
  created_by TEXT NOT NULL DEFAULT 'USER',
  created_at TEXT NOT NULL DEFAULT (datetime('now','localtime')),
  edited_at TEXT NOT NULL DEFAULT (datetime('now','localtime')),
  external_id TEXT DEFAULT NULL -- Identify external playlist: YTB...
);

-- insert default playlists
INSERT INTO db_playlist(name,type,description,created_by,created_at,edited_at)
VALUES ('Favourite','FAV','Favourite tracks','USER',datetime('now','localtime'),datetime('now','localtime'));

INSERT INTO db_playlist(name,type,description,created_by,created_at,edited_at)
VALUES ('Recent','RECENT','Recent tracks','Mousiki',datetime('now','localtime'),datetime('now','localtime'));

INSERT INTO db_playlist(name,type,description,created_by,created_at,edited_at)
VALUES ('Most played','HEAVY','Most played tracks','Mousiki',datetime('now','localtime'),datetime('now','localtime'));


-- #############  Recent track migration  ################ --
-- Rename table
DROP TABLE IF EXISTS db_recentTrack;
ALTER TABLE recent_played_tracks RENAME TO db_recentTrack;

-- Rename youtube_id to track_id
BEGIN TRANSACTION;
CREATE TABLE db_recentTrackTemp (
`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
`track_id` TEXT NOT NULL,
`title` TEXT NOT NULL,
`duration` TEXT NOT NULL,
`play_count` INTEGER NOT NULL DEFAULT 1
);
CREATE UNIQUE INDEX IF NOT EXISTS `index_db_recentTrackTemp_track_id` ON `db_recentTrackTemp` (`track_id`);

INSERT INTO db_recentTrackTemp(track_id,title,duration)
SELECT youtube_id,title,duration
FROM db_recentTrack;

DROP TABLE db_recentTrack;
ALTER TABLE db_recentTrackTemp RENAME TO db_recentTrack;

COMMIT;

-- Update play_count from historic table

UPDATE db_recentTrack
SET play_count = (SELECT historic_tracks.count FROM historic_tracks WHERE historic_tracks.youtube_id = db_recentTrack.track_id)
WHERE
    EXISTS (
        SELECT *
        FROM historic_tracks
        WHERE historic_tracks.youtube_id = db_recentTrack.track_id
    );
DROP TABLE historic_tracks;


-- #############  Favourite track migration  ################ --
-- Rename table
DROP TABLE IF EXISTS db_favouriteTrack;
ALTER TABLE favourite_tracks RENAME TO db_favouriteTrack;

-- Rename youtube_id to track_id
BEGIN TRANSACTION;
CREATE TABLE db_favouriteTrackTemp (
`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
`track_id` TEXT NOT NULL,
`title` TEXT NOT NULL,
`duration` TEXT NOT NULL
);
CREATE UNIQUE INDEX IF NOT EXISTS `index_db_favouriteTrackTemp_track_id` ON `db_favouriteTrackTemp` (`track_id`);

INSERT INTO db_favouriteTrackTemp(track_id,title,duration)
SELECT youtube_id,title,duration
FROM db_favouriteTrack;

DROP TABLE db_favouriteTrack;
ALTER TABLE db_favouriteTrackTemp RENAME TO db_favouriteTrack;

COMMIT;


-- #############  Custom playlist track migration  ################ --
-- Rename youtube_id to track_id
BEGIN TRANSACTION;
CREATE TABLE custom_playlist_trackTemp (
`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
`track_id` TEXT NOT NULL,
`title` TEXT NOT NULL,
`duration` TEXT NOT NULL,
`playlist_name` TEXT NOT NULL,
`playlist_id` INTEGER NOT NULL
);
CREATE UNIQUE INDEX IF NOT EXISTS `index_custom_playlist_trackTemp_track_id_playlist_name` ON `custom_playlist_trackTemp` (`track_id`, `playlist_name`);

INSERT INTO custom_playlist_trackTemp(track_id,title,duration,playlist_name, playlist_id)
SELECT youtube_id,title,duration,playlist_name, id
FROM custom_playlist_track;

DROP TABLE custom_playlist_track;
ALTER TABLE custom_playlist_trackTemp RENAME TO custom_playlist_track;

COMMIT;

-- #############  Playlists migration  ################ --

-- Add existing playlists
INSERT INTO db_playlist (name) SELECT DISTINCT playlist_name FROM custom_playlist_track;

-- Update playlist_id in custom_playlist_track table
UPDATE custom_playlist_track
SET playlist_id = (SELECT db_playlist.id FROM db_playlist WHERE db_playlist.name = custom_playlist_track.playlist_name);

-- Remove playlist_name from custom_playlist_track table
BEGIN TRANSACTION;
CREATE TABLE custom_playlist_trackTemp (
`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
`track_id` TEXT NOT NULL,
`title` TEXT NOT NULL,
`duration` TEXT NOT NULL,
`playlist_id` INTEGER NOT NULL
);
CREATE UNIQUE INDEX IF NOT EXISTS `index_custom_playlist_trackTemp_track_id_playlist_id` ON `custom_playlist_trackTemp` (`track_id`, `playlist_id`);

INSERT INTO custom_playlist_trackTemp(track_id,title,duration, playlist_id)
SELECT track_id,title,duration, playlist_id
FROM custom_playlist_track;

DROP TABLE custom_playlist_track;
ALTER TABLE custom_playlist_trackTemp RENAME TO custom_playlist_track;

COMMIT;

