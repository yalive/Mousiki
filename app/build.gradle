apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: "androidx.navigation.safeargs.kotlin"

apply plugin: 'kotlin-kapt'

apply plugin: 'org.sonarqube'

repositories {
    maven { url 'https://jitpack.io' }
}

/* Open class for testing purpose*/
apply plugin: "kotlin-allopen"
allOpen {
    // allows mocking for classes w/o directly opening them for release builds
    annotation 'com.cas.musicplayer.OpenClass'
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        // These docs use an open ended version so that our plugin
        // can be updated quickly in response to Android tooling updates

        // We recommend changing it to the latest version from our changelog:
        // https://docs.fabric.io/android/changelog.html#fabric-gradle-plugin
        classpath 'io.fabric.tools:gradle:1.28.1'
    }
}

apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    signingConfigs {
        releaseConfig {
            keyAlias 'yabahddou'
            keyPassword 'yabahddou'
            storeFile file('../keystore/keystore')
            storePassword 'yabahddou'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.cas.freemusic"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 10
        versionName "1.64"
        testInstrumentationRunner "com.cas.musicplayer.testing.TestRunner"
        signingConfig signingConfigs.releaseConfig
    }

    flavorDimensions "default"

    packagingOptions {
        exclude 'META-INF/core_release.kotlin_module'
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.releaseConfig
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    androidExtensions {
        experimental = true
    }
    productFlavors {

        prod {

        }

        dev {
            versionCode 3
            versionName "1.3"
            applicationIdSuffix ".dev"
        }
    }
}


sonarqube {
    properties {
        property "sonar.projectName", "MusicPlayer"
        property "sonar.projectKey", "MusicPlayer"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.language", "java"
        property "sonar.sources", "src/main/java"
        property "sonar.java.sources", "src/main/java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.login", "admin"
        property "sonar.password", "admin"
    }
}

dependencies {

    def roomVersion = "1.1.1"
    def lifecycle_version = "2.0.0"
    def nav_version = "2.1.0-alpha02"

    // Optional -- Mockito framework
    testImplementation "org.mockito:mockito-core:2.25.0"
    androidTestImplementation "org.mockito:mockito-core:2.25.0"
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito:2.25.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation "android.arch.persistence.room:testing:$roomVersion"
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0-alpha03'


    implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation "androidx.arch.core:core-testing:$lifecycle_version"

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.1.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation 'com.google.android.material:material:1.0.0-beta01'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    testImplementation 'junit:junit:4.12'
    // Sliding menu
    implementation 'com.yarolegovich:sliding-root-nav:1.1.0'
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    // Room components
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    kapt "android.arch.persistence.room:compiler:$roomVersion"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    // Youtube Player
    implementation 'com.pierfrancescosoffritti.androidyoutubeplayer:core:10.0.3'
    implementation 'com.sothree.slidinguppanel:library:3.4.0'
    implementation 'de.hdodenhof:circleimageview:3.0.0'
    // Network inspection
    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.afollestad.material-dialogs:core:2.8.1'


    implementation 'com.google.firebase:firebase-ads:17.2.0'

    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation 'com.google.firebase:firebase-messaging:18.0.0'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true;
    }

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.1'

    // Fragment KTX
    implementation 'androidx.activity:activity-ktx:1.0.0-beta01'
    implementation 'androidx.fragment:fragment-ktx:1.1.0-beta01'

    // Dagger 2
    implementation 'com.google.dagger:dagger:2.22.1'
    kapt 'com.google.dagger:dagger-compiler:2.22.1'
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.22.1'

}

apply plugin: 'com.google.gms.google-services'
